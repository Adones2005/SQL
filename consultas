
-- Cuales fueron los 2 campeones mas utilizados en el ano 2023.
SELECT c.Nombre AS Campeon, COUNT(*) AS Total_Utilizado
FROM campeones c
JOIN campeones_has_jugadores cj ON c.id_campeon = cj.id_campeon
JOIN partida p ON cj.id_partida = p.id_partida
JOIN torneo t ON p.Torneo = t.id_torneo
WHERE YEAR(t.Fecha_inicio) = 2023
GROUP BY c.Nombre
ORDER BY Total_Utilizado DESC
LIMIT 2;

-- que junglas fueron jugados en entre los anos 2011 y 2013
SELECT DISTINCT c.Nombre AS Campeon
FROM campeones c
JOIN campeones_has_jugadores cj ON c.id_campeon = cj.id_campeon
JOIN jugadores j ON cj.id_jugador = j.id_jugador
JOIN partida p ON cj.id_partida = p.id_partida
JOIN torneo t ON p.Torneo = t.id_torneo
WHERE YEAR(t.Fecha_inicio) BETWEEN 2011 AND 2013
AND c.Rol = 'Jungla';


-- Consulta para obtener el nombre y el precio de los objetos que han sido utilizados en más de 100 builds.

SELECT o.Nombre_objeto, o.Precio
FROM objetos o
JOIN build b ON o.id_objetos = b.id_objetos_1
   OR o.id_objetos = b.id_objetos_2
   OR o.id_objetos = b.id_objetos_3
   OR o.id_objetos = b.id_objetos_4
   OR o.id_objetos = b.id_objetos_5
   OR o.id_objetos = b.id_objetos_6
GROUP BY o.id_objetos
HAVING COUNT(*) > 25;


-- Consulta para encontrar los jugadores que jugaron partidas en un torneo específico.

SELECT DISTINCT j.Nombre, j.Apellido
FROM jugadores j
JOIN campeones_has_jugadores cj ON j.id_jugador = cj.id_jugador
JOIN partida p ON cj.id_partida = p.id_partida
WHERE p.Torneo = (SELECT id_torneo FROM torneo WHERE Nombre = 'MSI Play-In');

-- Consulta para obtener el nombre del campeón más utilizado en el último torneo registrado en la base de datos.

SELECT c.Nombre
FROM campeones c
JOIN campeones_has_jugadores cj ON c.id_campeon = cj.id_campeon
JOIN partida p ON cj.id_partida = p.id_partida
JOIN torneo t ON p.Torneo = t.id_torneo
ORDER BY t.Fecha_fin DESC
LIMIT 1;

===============================================================
CREATE VIEW vista_junglas_2011_2013 AS

SELECT DISTINCT c.Nombre AS Campeon
FROM campeones c
JOIN campeones_has_jugadores cj ON c.id_campeon = cj.id_campeon
JOIN jugadores j ON cj.id_jugador = j.id_jugador
JOIN partida p ON cj.id_partida = p.id_partida
JOIN torneo t ON p.Torneo = t.id_torneo
WHERE YEAR(t.Fecha_inicio) BETWEEN 2011 AND 2013
AND c.Rol = 'Jungla';

===============================================================
CREATE VIEW vista_jugadores_MSI_PlayIn AS

SELECT DISTINCT CONCAT(j.Nombre, ' ', j.Apellido) AS Nombre_Completo
FROM jugadores j
JOIN campeones_has_jugadores cj ON j.id_jugador = cj.id_jugador
JOIN partida p ON cj.id_partida = p.id_partida
WHERE p.Torneo = (SELECT id_torneo FROM torneo WHERE Nombre = 'MSI Play-In');

===============================================================
DELIMITER $$
CREATE FUNCTION calcular_precio_promedio() RETURNS DECIMAL(10,2)
BEGIN
    DECLARE avg_price DECIMAL(10,2);
    
    SELECT AVG(Precio) INTO avg_price
    FROM OBJETOS;
    
    RETURN avg_price;
END$$
DELIMITER ;

===============================================================
DELIMITER $$
CREATE FUNCTION contar_partidas_jugador(jugador_id INT) RETURNS INT
BEGIN
    DECLARE total_partidas INT;
    
    SELECT COUNT(*) INTO total_partidas
    FROM JUGADORES-CAMPEONES-PARTIDA
    WHERE JUGADORES_id_Entrenador = jugador_id;
    
    RETURN total_partidas;
END$$
DELIMITER ;

===============================================================
DELIMITER $$
CREATE PROCEDURE mostrar_precio_promedio()
BEGIN
    DECLARE avg_price DECIMAL(10,2);
    
    SET avg_price = calcular_precio_promedio();
    
    SELECT avg_price;
END$$
DELIMITER ;

===============================================================
DELIMITER $$
CREATE PROCEDURE mostrar_campeones_utilizados()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE champ_name VARCHAR(100);
    DECLARE champ_count INT;
    DECLARE champ_cursor CURSOR FOR 
        SELECT c.Nombre, COUNT(*) AS Total_Utilizado
        FROM CAMPEONES c
        JOIN JUGADORES-CAMPEONES-PARTIDA jcp ON c.idCAMPEONES = jcp.CAMPEONES_idCAMPEONES
        GROUP BY c.Nombre;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN champ_cursor;
    
    read_loop: LOOP
        FETCH champ_cursor INTO champ_name, champ_count;
        IF done THEN
            LEAVE read_loop;
        END IF;
        SELECT champ_name, champ_count;
    END LOOP;
    
    CLOSE champ_cursor;
END$$
DELIMITER ;

===============================================================
DELIMITER $$
CREATE PROCEDURE mostrar_info_jugadores_equipo(team_id INT)
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE jugador_nombre VARCHAR(100);
    DECLARE jugador_apellido VARCHAR(100);
    DECLARE jugador_posicion VARCHAR(50);
    DECLARE jugador_correo VARCHAR(100);
    DECLARE jugador_telefono INT;
    DECLARE jugador_cursor CURSOR FOR 
        SELECT Nombre, Apellido, Posicion, correo_electronico, `Nº de telefono`
        FROM JUGADORES
        WHERE Equipo_id_Equipo = team_id;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN jugador_cursor;
    
    read_loop: LOOP
        FETCH jugador_cursor INTO jugador_nombre, jugador_apellido, jugador_posicion, jugador_correo, jugador_telefono;
        IF done THEN
            LEAVE read_loop;
        END IF;
        SELECT jugador_nombre, jugador_apellido, jugador_posicion, jugador_correo, jugador_telefono;
    END LOOP;
    
    CLOSE jugador_cursor;
END$$
DELIMITER ;

===============================================================

===============================================================

===============================================================

===============================================================

===============================================================

===============================================================

